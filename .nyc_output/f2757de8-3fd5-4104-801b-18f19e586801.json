{"C:\\Users\\UCHE\\Desktop\\voopik-backend-challenge-1\\app.js":{"path":"C:\\Users\\UCHE\\Desktop\\voopik-backend-challenge-1\\app.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":18},"end":{"line":10,"column":64}},"4":{"start":{"line":12,"column":19},"end":{"line":12,"column":65}},"5":{"start":{"line":14,"column":18},"end":{"line":14,"column":65}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":35}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"10":{"start":{"line":21,"column":0},"end":{"line":23,"column":4}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":60}},"12":{"start":{"line":25,"column":0},"end":{"line":29,"column":3}},"13":{"start":{"line":26,"column":2},"end":{"line":28,"column":5}},"14":{"start":{"line":30,"column":13},"end":{"line":30,"column":37}},"15":{"start":{"line":31,"column":0},"end":{"line":33,"column":3}},"16":{"start":{"line":32,"column":2},"end":{"line":32,"column":60}},"17":{"start":{"line":34,"column":15},"end":{"line":34,"column":18}},"18":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":95}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":13},"end":{"line":25,"column":14}},"loc":{"start":{"line":25,"column":27},"end":{"line":29,"column":1}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":17},"end":{"line":31,"column":18}},"loc":{"start":{"line":31,"column":23},"end":{"line":33,"column":1}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":92}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16},"2":{"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":37}},"type":"binary-expr","locations":[{"start":{"line":30,"column":13},"end":{"line":30,"column":29}},{"start":{"line":30,"column":33},"end":{"line":30,"column":37}}],"line":30}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":4,"1":0,"2":1},"b":{"0":[1,3],"1":[4,4],"2":[1,1]},"inputSourceMap":{"version":3,"sources":["app.js"],"names":["app","use","bodyParser","json","urlencoded","extended","get","SuggestionController","suggestion","req","res","status","send","message","port","process","env","PORT","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,2BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAL,GAAG,CAACM,GAAJ,CAAQ,kBAAR,EAA4BC,oBAAqBC,UAAjD;AAEAR,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,CAACG,GAAD,EAAMC,GAAN,KAAc;AAC1BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBC,IAAAA,OAAO,EAAE;AADW,GAArB;AAGA,CAJD;AAMA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACAjB,GAAG,CAACkB,MAAJ,CAAWJ,IAAX,EAAiB,MAAM;AACtBK,EAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCN,IAAK,EAAvD;AACA,CAFD;eAKed,G","sourceRoot":"C:\\Users\\UCHE\\Desktop\\voopik-backend-challenge-1\\","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport compress from 'compression'\r\nimport SuggestionController from './controller';\r\n\r\nconst app = express();\r\napp.use(compress());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\napp.get('/suggestions/:q?', SuggestionController.suggestion);\r\n\r\napp.get('/', (req, res) => {\r\n\tres.status(200).send({\r\n\t\tmessage: 'Welcome to Voopik Backend API',\r\n\t});\r\n});\r\n\r\nconst port = process.env.PORT || 5000;\r\napp.listen(port, () => {\r\n\tconsole.log(`Voopik Backend API started on port ${port}`);\r\n});\r\n\r\n\r\nexport default app;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6314e639a4a6475423368069b767381cf0bec56f","contentHash":"245c2c1e33230ded6850ed2ab78802982f34deb2ae17c0b70d8128afbb1c4723"},"C:\\Users\\UCHE\\Desktop\\voopik-backend-challenge-1\\controller\\index.js":{"path":"C:\\Users\\UCHE\\Desktop\\voopik-backend-challenge-1\\controller\\index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":10},"end":{"line":8,"column":47}},"3":{"start":{"line":10,"column":11},"end":{"line":10,"column":49}},"4":{"start":{"line":12,"column":19},"end":{"line":12,"column":66}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":16},"end":{"line":16,"column":18}},"7":{"start":{"line":18,"column":0},"end":{"line":20,"column":3}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":39}},"9":{"start":{"line":25,"column":19},"end":{"line":41,"column":5}},"10":{"start":{"line":26,"column":26},"end":{"line":26,"column":28}},"11":{"start":{"line":28,"column":6},"end":{"line":35,"column":9}},"12":{"start":{"line":29,"column":8},"end":{"line":34,"column":11}},"13":{"start":{"line":37,"column":6},"end":{"line":39,"column":9}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":33}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":25}},"16":{"start":{"line":43,"column":19},"end":{"line":43,"column":51}},"17":{"start":{"line":45,"column":4},"end":{"line":58,"column":5}},"18":{"start":{"line":46,"column":29},"end":{"line":48,"column":8}},"19":{"start":{"line":47,"column":8},"end":{"line":47,"column":143}},"20":{"start":{"line":49,"column":26},"end":{"line":49,"column":58}},"21":{"start":{"line":50,"column":6},"end":{"line":52,"column":9}},"22":{"start":{"line":54,"column":6},"end":{"line":57,"column":9}},"23":{"start":{"line":65,"column":0},"end":{"line":65,"column":39}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":61},"end":{"line":18,"column":62}},"loc":{"start":{"line":18,"column":78},"end":{"line":20,"column":1}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":36},"end":{"line":61,"column":3}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":19},"end":{"line":25,"column":20}},"loc":{"start":{"line":25,"column":35},"end":{"line":41,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":15},"end":{"line":28,"column":16}},"loc":{"start":{"line":28,"column":23},"end":{"line":35,"column":7}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":23},"end":{"line":37,"column":24}},"loc":{"start":{"line":37,"column":33},"end":{"line":39,"column":7}},"line":37},"6":{"name":"(anonymous_6)","decl":{"start":{"line":46,"column":46},"end":{"line":46,"column":47}},"loc":{"start":{"line":46,"column":54},"end":{"line":48,"column":7}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":45,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":58,"column":5}},{"start":{"line":45,"column":4},"end":{"line":58,"column":5}}],"line":45},"3":{"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":142}},"type":"binary-expr","locations":[{"start":{"line":47,"column":15},"end":{"line":47,"column":37}},{"start":{"line":47,"column":42},"end":{"line":47,"column":82}},{"start":{"line":47,"column":86},"end":{"line":47,"column":141}}],"line":47}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":1,"13":2,"14":0,"15":2,"16":2,"17":2,"18":2,"19":7238,"20":2,"21":2,"22":0,"23":1},"f":{"0":3,"1":1,"2":2,"3":2,"4":1,"5":0,"6":7238},"b":{"0":[0,3],"1":[3,3],"2":[2,0],"3":[7238,7237,7237]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["fetchData","fs","readFile","error","data","tsv","parse","SuggestionController","suggestion","req","res","getScore","term","suggestions","map","city","push","name","latitude","lat","longitude","long","score","toFixed","sort","a","b","inputs","query","q","toLowerCase","trim","length","filteredCities","filter","population","includes","alt_name","split","status","json"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,SAAS,GAAG,EAAhB,C,CAEI;;AACJC,YAAGC,QAAH,CAAY,8BAAZ,EAA4C,MAA5C,EAAoD,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACjEJ,EAAAA,SAAS,GAAGK,aAAIC,KAAJ,CAAUF,IAAV,CAAZ;AACH,CAFD;;AAGe,MAAMG,oBAAN,CAA2B;AACtC,eAAaC,UAAb,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAoC;AAChC;AACA,QAAIC,QAAQ,GAAG,CAACP,IAAD,EAAOQ,IAAP,KAAgB;AAC3B,YAAMC,WAAW,GAAG,EAApB,CAD2B,CAG3B;;AACAT,MAAAA,IAAI,CAACU,GAAL,CAASC,IAAI,IAAI;AACbF,QAAAA,WAAW,CAACG,IAAZ,CAAkB;AACdC,UAAAA,IAAI,EAAEF,IAAI,CAACE,IADG;AAEdC,UAAAA,QAAQ,EAAEH,IAAI,CAACI,GAFD;AAGdC,UAAAA,SAAS,EAAEL,IAAI,CAACM,IAHF;AAIdC,UAAAA,KAAK,EAAE,0BAAMP,IAAI,CAACE,IAAX,EAAiBL,IAAjB,EAAuBW,OAAvB,CAA+B,CAA/B;AAJO,SAAlB;AAMH,OAPD,EAJ2B,CAa3B;;AACAV,MAAAA,WAAW,CAACW,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACtB,eAAOA,CAAC,CAACJ,KAAF,GAAUG,CAAC,CAACH,KAAnB;AACH,OAFD;AAIA,aAAOT,WAAP;AACH,KAnBD;;AAqBI,UAAMc,MAAM,GAAGlB,GAAG,CAACmB,KAAJ,CAAUC,CAAV,CAAYC,WAAZ,GAA0BC,IAA1B,EAAf;;AACA,QAAKJ,MAAM,CAACK,MAAP,GAAgB,CAArB,EAAwB;AAEpB,YAAMC,cAAc,GAAGjC,SAAS,CAACkC,MAAV,CAAiBnB,IAAI,IAAI;AAC7C,eAASA,IAAI,CAACoB,UAAL,GAAkB,IAAnB,KAA8BpB,IAAI,CAACE,IAAL,CAAUa,WAAV,GAAwBM,QAAxB,CAAiCT,MAAjC,KAA4CZ,IAAI,CAACsB,QAAL,CAAcP,WAAd,GAA4BQ,KAA5B,CAAkC,GAAlC,EAAuCF,QAAvC,CAAgDT,MAAhD,CAA1E,CAAR;AACF,OAFsB,CAAvB;AAIA,YAAMd,WAAW,GAAGF,QAAQ,CAACsB,cAAD,EAAiBN,MAAjB,CAA5B;AACA,aAAOjB,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAC3B,QAAAA;AAAD,OAArB,CAAP;AACH,KARD,MAQO;AACH,aAAOH,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,QAAAA,MAAM,EAAE,OADgB;AAExBpC,QAAAA,KAAK,EAAE;AAFiB,OAArB,CAAP;AAIH;;AAAA;AACJ;;AAvCiC;;;AAwCzC","sourceRoot":"C:\\Users\\UCHE\\Desktop\\voopik-backend-challenge-1\\controller\\","sourcesContent":["import fs from 'fs';\r\nimport tsv from 'tsv';\r\nimport score from 'string-score';\r\n\r\nlet fetchData = [];\r\n\r\n    // Read in TSV and parse data\r\nfs.readFile(\"./data/cities_canada-usa.tsv\", \"utf8\", (error, data) => {\r\n    fetchData = tsv.parse(data);\r\n});\r\nexport default class SuggestionController {\r\n    static async suggestion( req, res ) {\r\n        // Get the string score\r\n        let getScore = (data, term) => {\r\n            const suggestions = [];\r\n\r\n            // Create and push new object with score\r\n            data.map(city => {\r\n                suggestions.push ({\r\n                    name: city.name,\r\n                    latitude: city.lat,\r\n                    longitude: city.long,\r\n                    score: score(city.name, term).toFixed(2)\r\n                });\r\n            });\r\n\r\n            // Sort in descending order\r\n            suggestions.sort((a,b) => {\r\n                return b.score - a.score;\r\n            });\r\n\r\n            return suggestions;\r\n        }\r\n\r\n            const inputs = req.query.q.toLowerCase().trim();\r\n            if ( inputs.length > 0) {\r\n\r\n                const filteredCities = fetchData.filter(city => {\r\n                   return ((city.population > 5000) && ((city.name.toLowerCase().includes(inputs) || city.alt_name.toLowerCase().split(\",\").includes(inputs))))\r\n                });\r\n                \r\n                const suggestions = getScore(filteredCities, inputs)\r\n                return res.status(200).json({suggestions});\r\n            } else {\r\n                return res.status(404).json({\r\n                    status: 'error',\r\n                    error: 'Invalid search term'\r\n                  });\r\n            };\r\n        };\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f65bfc7506c29dd4da357e30fe16858fdf3990bf","contentHash":"d8f0bdb8f9334e6206bd09b32d3e727489abb7353ba4eee1980cf3759872edff"}}